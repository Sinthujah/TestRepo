# Exported from:        http://Jagan-lt10:5516/
# Release version:      23.3.0-beta.5
# Date created:         Mon Aug 14 14:54:35 IST 2023

---
apiVersion: xl-release/v1
kind: Templates
metadata:
  home: Digital.ai - Official/Workflows
spec:
- directory: Digital.ai Deploy
  children:
  - template: AWS Lambda application setup with Digital.ai Deploy
    description: "Easily create an application in Digital.ai Deploy that can be deployed\
      \ to AWS Lambda, including its respective environment and infrastructure setup."
    scheduledStartDate: 2023-03-23T09:00:00+05:30
    dueDate: 2023-03-23T10:00:00+05:30
    phases:
    - phase: Setup Infra and Env
      tasks:
      - name: Specify Deploy Server Connection
        type: xlrelease.UserInputTask
        description: Select the Deploy Server Connection onto which the AWS Lambda
          application has to be created. You can create a new connection if you have
          not created one.
        owner: admin
        variables:
        - deploy-server
      - name: Specify Environment Name
        type: xlrelease.UserInputTask
        description: Specify a name for the environment CI that should be created
          for AWS in Digital.ai Deploy server.
        owner: admin
        variables:
        - environment-name
      - name: Create Environment
        type: deploy.CreateCI
        description: Creates an Environment CI in Digital.ai Server.
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Environments/${environment-name}"
        ciType: udm.Environment
        jsonDescriptor: "{}"
      - name: Specify AWS Connection Parameters
        type: xlrelease.UserInputTask
        description: Specify the access key and secret of your AWS account.
        owner: admin
        variables:
        - awscloud-identifier
        - access-key
        - aws-access-secret
      - name: Configure AWS Cloud Connection
        type: deploy.CreateCI
        description: Creates an AWS Cloud CI in Digital.ai Server with the credentials
          specified in the previous task.
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Infrastructure/${awscloud-identifier}"
        ciType: aws.Cloud
        jsonDescriptor: |-
          {
              "accesskey":"${access-key}",
              "accessSecret":"${aws-access-secret}"
          }
        addToEnvironment: true
        envID: "Environments/${environment-name}"
      - name: Check AWS Connection
        type: deploy.ControlTask
        description: Checks if the specified AWS credentials are valid by running
          the Check Connection control task on the created AWS Cloud CI.
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciId: "Infrastructure/${awscloud-identifier}"
        taskName: checkConnection
        numberOfContinueRetrials: 0
        pollingInterval: 10
        numberOfPollingTrials: 0
        displayStepLogs: true
        connectionRetries: 10
      color: '#3d6c9e'
    - phase: Setup Application
      tasks:
      - name: Specify Application Name
        type: xlrelease.UserInputTask
        description: Specify a name  for the application CI that should be created
          in Digital.ai Deploy server.
        owner: admin
        variables:
        - application-name
      - name: Create Application
        type: deploy.CreateCI
        description: Creates an application in Digital.ai Deploy.
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Applications/${application-name}"
        ciType: udm.Application
        jsonDescriptor: "{}"
      - name: Specify Package Name
        type: xlrelease.UserInputTask
        description: Specify a name for the application deployment package that should
          be created in Digital.ai Deploy server.
        owner: admin
        variables:
        - package-name
      - name: Create Deployment Package
        type: deploy.CreateCI
        description: Creates an Deployment Package in the Digital.ai Server application
          created in the previous step.
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Applications/${application-name}/${package-name}"
        ciType: udm.DeploymentPackage
        jsonDescriptor: "{}"
      - name: Specify S3Lambda Parameters
        type: xlrelease.UserInputTask
        description: Specify the inputs for the lambda function to be created in the
          Digital.ai Deploy server.
        owner: admin
        variables:
        - functionName
        - bucketName
        - s3Key
        - region
        - runtime
        - role
        - handler
      - name: Create Sample Lambda Deployment from S3
        type: deploy.CreateCI
        description: Creates a lambda deployable CI with the details given in the
          previous step.
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Applications/${application-name}/${package-name}/sample-lambda"
        ciType: aws.lambda.S3Spec
        jsonDescriptor: |-
          {
              "functionName":"${functionName}",
              "bucketName":"${bucketName}",
              "s3Key":"${s3Key}",
              "region":"${region} ",
              "runtime":"${runtime} ",
              "role":"${role} ",
              "handler":"${handler} "
          }
      - name: Add Managed Application
        type: xlrelease.ScriptTask
        description: Adds the lambda application created to the Release Managed Application
          view.
        owner: admin
        script: |-
          from com.xebialabs.xlrelease.api.v1.views import ManagedApplicationView
          from com.xebialabs.xlrelease.api.v1.views import ConnectionServerView
          from java.util import Date
          from java.text import SimpleDateFormat
          import datetime

          parsedDate = datetime.datetime.now()

          requestBody = ManagedApplicationView()
          requestBody.applicationName = "${application-name}"
          requestBody.managedBy = "Digital.ai Deploy"
          requestBody.dateCreated = parsedDate
          requestBody.environmentTag = "${environment-name}"
          requestBody.applicationReference = "${application-name}"

          connectionServer = ConnectionServerView('${deploy-server}', '', '', '')
          requestBody.connectionServer = connectionServer

          res = managedApplicationApi.addManagedApplication(requestBody)
      color: '#3d6c9e'
    kind: WORKFLOW
    tags:
    - app-pipeline-templates
    categories:
    - Application Life Cycle Management
    - Cloud & Container
    - Serverless
    variables:
    - type: xlrelease.StringVariable
      key: environment-name
      value: aws-env
    - type: xlrelease.StringVariable
      key: awscloud-identifier
      value: aws-cloud
    - type: xlrelease.StringVariable
      key: application-name
      value: aws-app
    - type: xlrelease.StringVariable
      key: package-name
      value: "1.0"
    - type: xlrelease.StringVariable
      key: functionName
      value: functionName
    - type: xlrelease.StringVariable
      key: bucketName
      value: bucketName
    - type: xlrelease.StringVariable
      key: s3Key
      value: s3Key
    - type: xlrelease.StringVariable
      key: region
      value: region
    - type: xlrelease.StringVariable
      key: runtime
      value: runtime
    - type: xlrelease.StringVariable
      key: role
      value: role
    - type: xlrelease.StringVariable
      key: handler
      value: handler
    - type: xlrelease.StringVariable
      key: applicationReference
      value: applicationReference
    - type: xlrelease.StringVariable
      key: connectionServer
      value: connectionServer
    - type: xlrelease.StringVariable
      key: environmentTag
      value: environmentTag
    - type: xlrelease.StringVariable
      key: managedBy
      value: managedBy
    - type: xlrelease.StringVariable
      key: access-key
      showOnReleaseStart: false
    - type: xlrelease.ReferenceVariable
      key: deploy-server
      showOnReleaseStart: false
      label: Deploy Server
      referencedType: digitalai.DeployServer
    - type: xlrelease.PasswordStringVariable
      key: aws-access-secret
      showOnReleaseStart: false
    allowPasswordsInAllFields: true
    scriptUsername: admin
    riskProfile: Default risk profile
    author: Digital.ai
    logo:
      type: xlrelease.TemplateLogo
      contentType: image/png
      file: !file "template-logo/8a6a02deb543807bb34b22aef762b92e7a70adb2/xlr-xld-plugin.png"
  - template: Azure Application setup with Digital.ai Deploy to create Azure resource
      groups
    description: "Seamless create an application in Digital.ai Deploy that can create\
      \ Azure resource groups, including its respective environment and infrastructure\
      \ setup."
    scheduledStartDate: 2023-03-23T09:00:00+05:30
    dueDate: 2023-03-23T10:00:00+05:30
    phases:
    - phase: Setup Infra and Env
      tasks:
      - name: Specify Deploy Server Details
        type: xlrelease.UserInputTask
        description: Select the Deploy Server Connection onto which the Azure application
          has to be created. You can create a new connection if you have not created
          one.
        owner: admin
        variables:
        - deploy-server
      - name: Specify Environment Name
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - environment-name
      - name: Create Environment
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Environments/${environment-name}"
        ciType: udm.Environment
        jsonDescriptor: "{}"
      - name: Specify Azure Connection Parameters
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - azurecloud-identifier
        - subscription-id
        - tenant-id
        - client-id
        - client-secret
      - name: Configure Azure Connection
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Infrastructure/${azurecloud-identifier}"
        ciType: azure.Cloud
        jsonDescriptor: |-
          {
              "authMethod":"directory-application-and-service-principal",
              "subscriptionId":"${subscription-id}",
              "tenantId":"${tenant-id}",
              "clientId":"${client-id}",
              "clientKey":"${client-secret}"
          }
        addToEnvironment: true
        envID: "Environments/${environment-name}"
      - name: Check Azure Connection
        type: deploy.ControlTask
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciId: "Infrastructure/${azurecloud-identifier}"
        taskName: checkConnection
        numberOfContinueRetrials: 0
        pollingInterval: 10
        numberOfPollingTrials: 0
        displayStepLogs: true
        connectionRetries: 10
      color: '#3d6c9e'
    - phase: Setup Application
      tasks:
      - name: Specify Application Name
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - application-name
      - name: Create Application
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Applications/${application-name}"
        ciType: udm.Application
        jsonDescriptor: "{}"
      - name: Specify Package Name
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - package-name
      - name: Create Deployment Package
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Applications/${application-name}/${package-name}"
        ciType: udm.DeploymentPackage
        jsonDescriptor: "{}"
      - name: Specify Resource Group Parameters
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - resourcegroup-name
        - resourcegroup-location
      - name: Create Sample Resource Group
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Applications/${application-name}/${package-name}/sample-resource-group"
        ciType: azure.ResourceGroupSpec
        jsonDescriptor: |-
          {
              "location":"${resourcegroup-location}",
              "resourceGroupName":"${resourcegroup-name}"
          }
      - name: Add Managed Application
        type: xlrelease.ScriptTask
        owner: admin
        script: |-
          from com.xebialabs.xlrelease.api.v1.views import ManagedApplicationView
          from com.xebialabs.xlrelease.api.v1.views import ConnectionServerView
          from java.util import Date
          from java.text import SimpleDateFormat
          import datetime

          parsedDate = datetime.datetime.now()

          requestBody = ManagedApplicationView()
          requestBody.applicationName = "${application-name}"
          requestBody.managedBy = "Digital.ai Deploy"
          requestBody.dateCreated = parsedDate
          requestBody.environmentTag = "${environment-name}"
          requestBody.applicationReference = "${application-name}"

          connectionServer = ConnectionServerView('${deploy-server}', '', '', '')
          requestBody.connectionServer = connectionServer

          res = managedApplicationApi.addManagedApplication(requestBody)
      color: '#3d6c9e'
    kind: WORKFLOW
    tags:
    - app-pipeline-templates
    variables:
    - type: xlrelease.StringVariable
      key: environment-name
      value: azure-env
    - type: xlrelease.StringVariable
      key: application-name
      value: azure-app
    - type: xlrelease.StringVariable
      key: package-name
      value: "1.0"
    - type: xlrelease.StringVariable
      key: azurecloud-identifier
      value: azure-cloud
    - type: xlrelease.StringVariable
      key: client-id
      value: client-id
    - type: xlrelease.StringVariable
      key: client-secret
      value: client-secret
    - type: xlrelease.StringVariable
      key: subscription-id
      value: subscription-id
    - type: xlrelease.StringVariable
      key: tenant-id
      value: tenant-id
    - type: xlrelease.StringVariable
      key: resourcegroup-location
      value: East US
    - type: xlrelease.StringVariable
      key: resourcegroup-name
      value: resourcegroup-name
    - type: xlrelease.ReferenceVariable
      key: deploy-server
      showOnReleaseStart: false
      label: Deploy Server
      referencedType: digitalai.DeployServer
    riskProfile: Default risk profile
    author: Digital.ai
    logo:
      type: xlrelease.TemplateLogo
      contentType: image/png
      file: !file "template-logo/97662a62108c2b1e1875c8e18f6d1c72a013d33c/xlr-xld-plugin.png"
  - template: GCP Application setup with Digital.ai Deploy for virtual machine instance
    description: "Seamless create an application in Digital.ai Deploy that can set\
      \ up virtual machine instances in GCP, including its respective environment\
      \ and infrastructure configuration."
    scheduledStartDate: 2023-03-31T09:00:00+05:30
    dueDate: 2023-03-31T10:00:00+05:30
    phases:
    - phase: Setup Env and Infra
      tasks:
      - name: Specify Deploy Server Details
        type: xlrelease.UserInputTask
        description: Select the Deploy Server Connection onto which the Google Cloud
          Platform application has to be created. You can create a new connection
          if you have not created one.
        owner: admin
        variables:
        - deploy-server
      - name: Specify Environment Name
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - environment_identifier
      - name: Create Environment
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Environments/${environment_identifier}"
        ciType: udm.Environment
        jsonDescriptor: "{}"
      - name: Specify Google Account Parameters
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - google_account_cloud_name
        - gcp_project_id
        - gcp_client_email
        - private_key
      - name: Create Google Account Cloud Infra
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Infrastructure/${google_account_cloud_name}"
        ciType: google.AccountCloud
        jsonDescriptor: |-
          {
              "projectId": "${gcp_project_id}",
              "clientEmail": "${gcp_client_email}",
              "privateKey": "${private_key}"
          }
        addToEnvironment: true
        envID: "Environments/${environment_identifier}"
      - name: Check Connection of Google account
        type: deploy.ControlTask
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciId: "Infrastructure/${google_account_cloud_name}"
        taskName: checkConnection
        numberOfContinueRetrials: 0
        pollingInterval: 10
        numberOfPollingTrials: 0
        displayStepLogs: true
        connectionRetries: 10
    - phase: Setup Application
      tasks:
      - name: Specify Application Name
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - application_identifier
      - name: Create Application
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Applications/${application_identifier}"
        ciType: udm.Application
        jsonDescriptor: "{}"
      - name: Specify Package Name
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - application_version
      - name: Create Deployment Package
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Applications/${application_identifier}/${application_version}"
        ciType: udm.DeploymentPackage
      - name: Specify Intance Spec Parameters
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - zone
        - machine
        - image_project
        - image
        - wait_time_for_create
        - wait_time_for_destroy
      - name: Create Google Instance spec
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Applications/${application_identifier}/${application_version}/${instance_spec_name}"
        ciType: googlecloud.compute.InstanceSpec
        jsonDescriptor: |-
          {
              "zone": "${zone}",
              "machine": "${machine}",
              "imageProject": "${image_project}",
              "image": "${image}",
              "waitOnCreate": "${wait_time_for_create}",
              "waitOnDestroy": "${wait_time_for_destroy}"
          }
      - name: Add Managed Application
        type: xlrelease.ScriptTask
        owner: admin
        script: |-
          from com.xebialabs.xlrelease.api.v1.views import ManagedApplicationView
          from com.xebialabs.xlrelease.api.v1.views import ConnectionServerView
          from java.util import Date
          from java.text import SimpleDateFormat
          import datetime

          parsedDate = datetime.datetime.now()

          requestBody = ManagedApplicationView()
          requestBody.applicationName = "${application_identifier}"
          requestBody.managedBy = "Digital.ai Deploy"
          requestBody.dateCreated = parsedDate
          requestBody.environmentTag = "${environment_identifier}"
          requestBody.applicationReference = "${application_identifier}"

          connectionServer = ConnectionServerView('${deploy-server}', '', '', '')
          requestBody.connectionServer = connectionServer

          res = managedApplicationApi.addManagedApplication(requestBody)
      color: '#3d6c9e'
    kind: WORKFLOW
    tags:
    - app-pipeline-templates
    categories:
    - Application Life Cycle Management
    - Cloud & Container
    variables:
    - type: xlrelease.StringVariable
      key: environment_identifier
      value: gcp_env
    - type: xlrelease.StringVariable
      key: google_account_cloud_name
      value: google_cloud
    - type: xlrelease.StringVariable
      key: gcp_project_id
      value: gcp_project_id
    - type: xlrelease.StringVariable
      key: private_key
      value: gcp_private_key
    - type: xlrelease.StringVariable
      key: application_identifier
      value: gcp_app
    - type: xlrelease.StringVariable
      key: application_version
      value: app_version
    - type: xlrelease.StringVariable
      key: instance_spec_name
      value: gcp_instance_spec_name
    - type: xlrelease.StringVariable
      key: machine
      value: machine
    - type: xlrelease.StringVariable
      key: image_project
      value: image_project
    - type: xlrelease.StringVariable
      key: zone
      value: zone
    - type: xlrelease.StringVariable
      key: image
      value: image
    - type: xlrelease.StringVariable
      key: wait_time_for_create
      value: wait_for_create
    - type: xlrelease.StringVariable
      key: wait_time_for_destroy
      value: wait_time_for_destroy
    - type: xlrelease.StringVariable
      key: gcp_client_email
      value: gcp_client_email
    - type: xlrelease.ReferenceVariable
      key: deploy-server
      showOnReleaseStart: false
      label: Deploy Server
      referencedType: digitalai.DeployServer
    - type: xlrelease.StringVariable
      key: application-name
    - type: xlrelease.StringVariable
      key: environment-name
    riskProfile: Default risk profile
    author: Digital.ai
    logo:
      type: xlrelease.TemplateLogo
      contentType: image/png
      file: !file "template-logo/1acf43f120046fcbeca6ce60329683dc10bb741d/xlr-xld-plugin.png"
  - template: Tomcat DataSource Setup on SSH Host with Digital.ai Deploy
    description: "Easily create an application in Digital.ai Deploy that can be used\
      \ to create a DataSource in a Remote Tomcat Server, including its respective\
      \ environment and infrastructure setup."
    scheduledStartDate: 2023-03-23T09:00:00+05:30
    dueDate: 2023-03-23T10:00:00+05:30
    phases:
    - phase: Setup Infra and Env
      tasks:
      - name: Specify Deploy Server Details
        type: xlrelease.UserInputTask
        description: Select the Deploy Server Connection onto which the Tomcat application
          has to be created. You can create a new connection if you have not created
          one.
        owner: admin
        variables:
        - deploy-server
      - name: Specify Environment Name
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - environment-name
      - name: Create Environment
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Environments/${environment-name}"
        ciType: udm.Environment
        jsonDescriptor: "{}"
      - name: Specify Tomcat Host Parameters
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - host-identifier
        - sudo-username
        - os
        - address
        - port
        - ssh-username
        - ssh-privatekey
      - name: Configure Remote Host
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Infrastructure/${host-identifier}"
        ciType: overthere.SshHost
        jsonDescriptor: |-
          {
              "stagingDirectoryPath":"",
              "sudoUsername":"${sudo-username}",
              "suUsername":"",
              "suPassword":"",
              "os":"${os}",
              "connectionType":"SUDO",
              "address":"${address}",
              "port":"${port}",
              "username":"${ssh-username}",
              "password":"",
              "privateKeyFile":"${ssh-privatekey}",
              "passphrase":""
          }
        addToEnvironment: true
        envID: "Environments/${environment-name}"
      - name: Check Remote Host Connection
        type: deploy.ControlTask
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciId: "Infrastructure/${host-identifier}"
        taskName: checkConnection
        numberOfContinueRetrials: 0
        pollingInterval: 10
        numberOfPollingTrials: 0
        displayStepLogs: true
        connectionRetries: 10
      - name: Specify Tomcat Server Parameters
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - server-name
        - tomcat-home
        - tomcat-start-command
        - tomcat-stop-command
        - tomcat-status-command
        - tomcat-status-exptected-output
      - name: Configure Tomcat Server
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Infrastructure/${host-identifier}/${server-name}"
        ciType: tomcat.Server
        jsonDescriptor: |-
          {
              "home":"${tomcat-home}",
              "startCommand":"${tomcat-start-command}",
              "stopCommand":"${tomcat-stop-command}",
              "statusCommand":"${tomcat-status-command}",
              "statusCommandExpectedOutput":"${tomcat-status-exptected-output}",
              "startWaitTime":"0",
              "stopWaitTime":"0",
              "serverStartupTime":"0",
              "serverShutdownTime":"0",
              "tomcatRunningPort":""
          }
        addToEnvironment: true
        envID: "Environments/${environment-name}"
      - name: Check Tomcat Status
        type: deploy.ControlTask
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciId: "Infrastructure/${host-identifier}/${server-name}"
        taskName: status
        numberOfContinueRetrials: 0
        pollingInterval: 10
        numberOfPollingTrials: 0
        displayStepLogs: true
        connectionRetries: 10
      - name: Specify Tomcat Virtual Host Name
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - virtual-host-name
      - name: Configure Tomcat VirtualHost
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Infrastructure/${host-identifier}/${server-name}/${virtual-host-name}"
        ciType: tomcat.VirtualHost
        jsonDescriptor: "{}"
        addToEnvironment: true
        envID: "Environments/${environment-name}"
    - phase: Setup Application
      tasks:
      - name: Specify Application Name
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - application-name
      - name: Setup Application
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Applications/${application-name}"
        ciType: udm.Application
        jsonDescriptor: "{}"
      - name: Specify Package Name
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - package-name
      - name: Create Deployment Package
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Applications/${application-name}/1.0"
        ciType: udm.DeploymentPackage
        jsonDescriptor: "{}"
      - name: Specify Tomcat Datasource
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - datasource-name
        - jndi-name
        - datasource-context
        - database-driver-class-name
        - database url
        - db-username
        - db-password
      - name: Create Sample Tomcat DataSourceSpec
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Applications/${application-name}/${package-name}/${datasource-name}"
        ciType: tomcat.DataSourceSpec
        jsonDescriptor: |-
          {
              "context":"${datasource-context}",
              "jndiName":"${jndi-name}",
              "driverClassName":"${database-driver-class-name}",
              "url":"${database url}",
              "username":"${db-username}",
              "password":"${db-password}"
          }
      - name: Add Managed Application
        type: xlrelease.ScriptTask
        owner: admin
        script: |-
          from com.xebialabs.xlrelease.api.v1.views import ManagedApplicationView
          from com.xebialabs.xlrelease.api.v1.views import ConnectionServerView
          from java.util import Date
          from java.text import SimpleDateFormat
          import datetime

          parsedDate = datetime.datetime.now()

          requestBody = ManagedApplicationView()
          requestBody.applicationName = "${application-name}"
          requestBody.managedBy = "Digital.ai Deploy"
          requestBody.dateCreated = parsedDate
          requestBody.environmentTag = "${environment-name}"
          requestBody.applicationReference = "${application-name}"

          connectionServer = ConnectionServerView('${deploy-server}', '', '', '')
          requestBody.connectionServer = connectionServer

          res = managedApplicationApi.addManagedApplication(requestBody)
      color: '#3d6c9e'
    kind: WORKFLOW
    tags:
    - app-pipeline-templates
    variables:
    - type: xlrelease.StringVariable
      key: environment-name
      value: tomcat-env
    - type: xlrelease.StringVariable
      key: host-identifier
      value: tomcat-host
    - type: xlrelease.StringVariable
      key: address
      value: 1.2.3.4
    - type: xlrelease.StringVariable
      key: os
      value: UNIX
    - type: xlrelease.StringVariable
      key: port
      value: "22"
    - type: xlrelease.StringVariable
      key: ssh-privatekey
      value: private-key-path
    - type: xlrelease.StringVariable
      key: ssh-username
      value: ssh-username
    - type: xlrelease.StringVariable
      key: sudo-username
      value: sudo-username
    - type: xlrelease.StringVariable
      key: application-name
      value: tomcat-app
    - type: xlrelease.StringVariable
      key: package-name
      value: "1.0"
    - type: xlrelease.StringVariable
      key: tomcat-home
      value: tomcat-home
    - type: xlrelease.StringVariable
      key: tomcat-start-command
      value: systemctl start tomcat
    - type: xlrelease.StringVariable
      key: tomcat-status-command
      value: systemctl status tomcat
    - type: xlrelease.StringVariable
      key: tomcat-status-exptected-output
      value: active (running)
    - type: xlrelease.StringVariable
      key: tomcat-stop-command
      value: systemctl stop tomcat
    - type: xlrelease.StringVariable
      key: database url
      value: database url
    - type: xlrelease.StringVariable
      key: database-driver-class-name
      value: database-driver-class-name
    - type: xlrelease.StringVariable
      key: datasource-context
      value: datasource-context
    - type: xlrelease.StringVariable
      key: db-password
      value: db-password
    - type: xlrelease.StringVariable
      key: db-username
      value: db-username
    - type: xlrelease.StringVariable
      key: jndi-name
      value: jndi-name
    - type: xlrelease.StringVariable
      key: server-name
      value: tomcat-server
    - type: xlrelease.StringVariable
      key: virtual-host-name
      value: virtual-host
    - type: xlrelease.StringVariable
      key: datasource-name
      value: sample-datasource
    - type: xlrelease.ReferenceVariable
      key: deploy-server
      showOnReleaseStart: false
      label: Deploy Server
      referencedType: digitalai.DeployServer
    riskProfile: Default risk profile
    author: Digital.ai
    logo:
      type: xlrelease.TemplateLogo
      contentType: image/png
      file: !file "template-logo/9a6971f732677b76071b3d996d2cbb1d77fb617a/xlr-xld-plugin.png"
  - template: Websphere JaasAlias setup with Digital.ai Deploy
    description: "Easily create an application in Digital.ai Deploy that can be used\
      \ to create a JaasAlias in a remote Websphere Server, including its respective\
      \ environment and infrastructure setup."
    scheduledStartDate: 2023-02-14T09:00:00+05:30
    dueDate: 2023-02-14T10:00:00+05:30
    phases:
    - phase: Setup Infra and Env
      tasks:
      - name: Specify Deploy Server Details
        type: xlrelease.UserInputTask
        description: Select the Deploy Server Connection onto which the Websphere
          application has to be created. You can create a new connection if you have
          not created one.
        owner: admin
        variables:
        - deploy-server
      - name: Specify Environment Name
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - environment-name
      - name: Create Environment
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Environments/${environment-name}"
        ciType: udm.Environment
        jsonDescriptor: "{}"
      - name: Specify WAS Host Parameters
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - host-identifier
        - sudo-username
        - os
        - connection-type
        - address
        - ssh-username
        - ssh-password
      - name: Configure Remote Host
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Infrastructure/${host-identifier}"
        ciType: overthere.SshHost
        jsonDescriptor: |-
          {
              "stagingDirectoryPath":"",
              "sudoUsername":"${sudo-username}",
              "suUsername":"",
              "suPassword":"",
              "os":"${os}",
              "connectionType":"${connection-type}",
              "address":"${address}",
              "port":22,
              "username":"${ssh-username}",
              "password":"${ssh-password}",
              "privateKeyFile":"",
              "passphrase":""
          }
      - name: Check Remote Host Connection
        type: deploy.ControlTask
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciId: "Infrastructure/${host-identifier}"
        taskName: checkConnection
        numberOfContinueRetrials: 0
        pollingInterval: 10
        numberOfPollingTrials: 0
        displayStepLogs: true
        connectionRetries: 10
      - name: Specify WAS Deployment Manager Parameters
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - cell-name
        - was-home
        - was-username
        - was-password
      - name: Configure Websphere Deployment Manager
        type: deploy.CreateCI
        owner: admin
        variableMapping:
          server: "${deploy-server}"
        capabilities:
        - remote
        ciID: "Infrastructure/${host-identifier}/${cell-name}"
        ciType: was.DeploymentManager
        jsonDescriptor: |-
          {
              "wasHome": "${was-home}",
              "username": "${was-username}",
              "password": "${was-password}",
              "version": "WAS_90"
          }
        addToEnvironment: true
        envID: "Environments/${environment-name}"
      - name: Specify WAS Node Agent Parameters
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - node-name
      - name: Configure Websphere Node Agent
        type: deploy.CreateCI
        capabilities:
        - remote
        ciID: "Infrastructure/${host-identifier}/${cell-name}/${node-name}"
        ciType: was.NodeAgent
        jsonDescriptor: "{}"
        addToEnvironment: true
        envID: "Environments/${environment-name}"
      - name: Specify WAS Server Parameters
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - server-name
      - name: Configure Websphere Server
        type: deploy.CreateCI
        capabilities:
        - remote
        ciID: "Infrastructure/${host-identifier}/${cell-name}/${node-name}/${server-name}"
        ciType: was.ManagedServer
        jsonDescriptor: "{}"
        addToEnvironment: true
        envID: "Environments/${environment-name}"
      color: '#3d6c9e'
    - phase: Setup Application
      tasks:
      - name: Specify WAS Application Name
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - application-name
      - name: Create Application
        type: deploy.CreateCI
        owner: admin
        capabilities:
        - remote
        ciID: "Applications/${application-name}"
        ciType: udm.Application
        jsonDescriptor: "{}"
      - name: Specify Deployment Package
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - package-name
      - name: Create Deployment Package
        type: deploy.CreateCI
        owner: admin
        capabilities:
        - remote
        ciID: "Applications/${application-name}/${package-name}"
        ciType: udm.DeploymentPackage
        jsonDescriptor: "{}"
      - name: Specify WAS JaasAliasSpec Parameters
        type: xlrelease.UserInputTask
        description: Please enter the required information below.
        owner: admin
        variables:
        - jaas-password
        - jaas-username
      - name: Create Sample WAS JaasAliasSpec
        type: deploy.CreateCI
        owner: admin
        capabilities:
        - remote
        ciID: "Applications/${application-name}/${package-name}/${jaas-alias-name}"
        ciType: was.JaasAliasSpec
        jsonDescriptor: |-
          {
          "username": "${jaas-username}",
          "password": "${jaas-password}"
          }
      - name: Add Managed Application
        type: xlrelease.ScriptTask
        owner: admin
        script: |-
          from com.xebialabs.xlrelease.api.v1.views import ManagedApplicationView
          from com.xebialabs.xlrelease.api.v1.views import ConnectionServerView
          from java.util import Date
          from java.text import SimpleDateFormat
          import datetime

          parsedDate = datetime.datetime.now()

          requestBody = ManagedApplicationView()
          requestBody.applicationName = "${application-name}"
          requestBody.managedBy = "Digital.ai Deploy"
          requestBody.dateCreated = parsedDate
          requestBody.environmentTag = "${environment-name}"
          requestBody.applicationReference = "${application-name}"

          connectionServer = ConnectionServerView('${deploy-server}', '', '', '')
          requestBody.connectionServer = connectionServer

          res = managedApplicationApi.addManagedApplication(requestBody)
      color: '#3d6c9e'
    kind: WORKFLOW
    tags:
    - app-pipeline-templates
    variables:
    - type: xlrelease.StringVariable
      key: environment-name
      value: was-env
    - type: xlrelease.StringVariable
      key: host-identifier
      value: was-host
    - type: xlrelease.StringVariable
      key: os
      value: UNIX
    - type: xlrelease.StringVariable
      key: address
      value: 1.2.3.4
    - type: xlrelease.StringVariable
      key: connection-type
      value: SUDO
    - type: xlrelease.StringVariable
      key: ssh-username
      value: ssh-username
    - type: xlrelease.StringVariable
      key: ssh-password
      value: ssh-password
    - type: xlrelease.StringVariable
      key: sudo-username
      value: sudo-username
    - type: xlrelease.StringVariable
      key: application-name
      value: was-application
    - type: xlrelease.StringVariable
      key: package-name
      value: "1.0"
    - type: xlrelease.StringVariable
      key: cell-name
      value: was-cell-1
    - type: xlrelease.StringVariable
      key: was-home
      value: /opt/IBM/WebSphere/AppServer-1/profiles/Dmgr01
    - type: xlrelease.StringVariable
      key: was-password
      value: admin
    - type: xlrelease.StringVariable
      key: was-username
      value: admin
    - type: xlrelease.StringVariable
      key: was-version
      value: WAS_90
    - type: xlrelease.StringVariable
      key: node-name
      value: was-node-1
    - type: xlrelease.StringVariable
      key: server-name
      value: was-server-1
    - type: xlrelease.StringVariable
      key: jaas-password
      value: admin
    - type: xlrelease.StringVariable
      key: jaas-username
      value: admin
    - type: xlrelease.ReferenceVariable
      key: deploy-server
      showOnReleaseStart: false
      label: Deploy Server
      referencedType: digitalai.DeployServer
    - type: xlrelease.StringVariable
      key: jaas-alias-name
      value: Sample JAAS Alias
    riskProfile: Default risk profile
    author: Digital.ai
    logo:
      type: xlrelease.TemplateLogo
      contentType: image/png
      file: !file "template-logo/9dda4235a32e0a48f98fd815771690a722aeb812/xlr-xld-plugin.png"
